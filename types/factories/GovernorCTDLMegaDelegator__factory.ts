/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  GovernorCTDLMegaDelegator,
  GovernorCTDLMegaDelegatorInterface,
} from "../GovernorCTDLMegaDelegator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "timelock_",
        type: "address",
      },
      {
        internalType: "address",
        name: "sCTDL_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gCTDL_",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votingPeriod_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "votingDelay_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "proposalThreshold_",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "NewAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "NewImplementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldPendingAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newPendingAdmin",
        type: "address",
      },
    ],
    name: "NewPendingAdmin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ProposalCanceled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "targets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "signatures",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "bytes[]",
        name: "calldatas",
        type: "bytes[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endBlock",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votesNeeded",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "eta",
        type: "uint256",
      },
    ],
    name: "ProposalQueued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposalThreshold",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newProposalThreshold",
        type: "uint256",
      },
    ],
    name: "ProposalThresholdSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "support",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingDelay",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingDelay",
        type: "uint256",
      },
    ],
    name: "VotingDelaySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldVotingPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newVotingPeriod",
        type: "uint256",
      },
    ],
    name: "VotingPeriodSet",
    type: "event",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    name: "_setImplementation",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e6f38038062000e6f833981810160405262000037919081019062000406565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620001228489898987878760405160240162000099969594939291906200065e565b6040516020818303038152906040527f728cdbca000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200018160201b60201c565b62000133846200020a60201b60201c565b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050620007de565b600060608373ffffffffffffffffffffffffffffffffffffffff1683604051620001ac919062000618565b600060405180830381855af49150503d8060008114620001e9576040519150601f19603f3d011682016040523d82523d6000602084013e620001ee565b606091505b5091509150600082141562000204573d60208201fd5b50505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146200029c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200029390620006ed565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200030f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200030690620006cb565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a81600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051620003cc92919062000631565b60405180910390a15050565b600081519050620003e981620007aa565b92915050565b6000815190506200040081620007c4565b92915050565b600080600080600080600080610100898b0312156200042457600080fd5b6000620004348b828c01620003d8565b9850506020620004478b828c01620003d8565b97505060406200045a8b828c01620003d8565b96505060606200046d8b828c01620003d8565b9550506080620004808b828c01620003d8565b94505060a0620004938b828c01620003ef565b93505060c0620004a68b828c01620003ef565b92505060e0620004b98b828c01620003ef565b9150509295985092959890939650565b620004d48162000736565b82525050565b6000620004e7826200070f565b620004f381856200071a565b93506200050581856020860162000774565b80840191505092915050565b600062000520604a8362000725565b91507f476f7665726e6f72427261766f44656c656761746f723a3a5f736574496d706c60008301527f656d656e746174696f6e3a20696e76616c696420696d706c656d656e7461746960208301527f6f6e2061646472657373000000000000000000000000000000000000000000006040830152606082019050919050565b6000620005ae60368362000725565b91507f476f7665726e6f72427261766f44656c656761746f723a3a5f736574496d706c60008301527f656d656e746174696f6e3a2061646d696e206f6e6c79000000000000000000006020830152604082019050919050565b62000612816200076a565b82525050565b6000620006268284620004da565b915081905092915050565b6000604082019050620006486000830185620004c9565b620006576020830184620004c9565b9392505050565b600060c082019050620006756000830189620004c9565b620006846020830188620004c9565b620006936040830187620004c9565b620006a2606083018662000607565b620006b1608083018562000607565b620006c060a083018462000607565b979650505050505050565b60006020820190508181036000830152620006e68162000511565b9050919050565b6000602082019050818103600083015262000708816200059f565b9050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600062000743826200074a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156200079457808201518184015260208101905062000777565b83811115620007a4576000848401525b50505050565b620007b58162000736565b8114620007c157600080fd5b50565b620007cf816200076a565b8114620007db57600080fd5b50565b61068180620007ee6000396000f3fe60806040526004361061003f5760003560e01c806326782247146100e85780635c60da1b14610113578063bb913f411461013e578063f851a44014610167575b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660003660405161008b92919061052d565b600060405180830381855af49150503d80600081146100c6576040519150601f19603f3d011682016040523d82523d6000602084013e6100cb565b606091505b505090506040513d6000823e81600081146100e4573d82f35b3d82fd5b3480156100f457600080fd5b506100fd610192565b60405161010a9190610546565b60405180910390f35b34801561011f57600080fd5b506101286101b8565b6040516101359190610546565b60405180910390f35b34801561014a57600080fd5b50610165600480360361016091908101906103de565b6101de565b005b34801561017357600080fd5b5061017c6103a4565b6040516101899190610546565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461026d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610264906105aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d49061058a565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd604de94d45953f9138079ec1b82d533cb2160c906d1076d1f7ed54befbca97a81600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610398929190610561565b60405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506103d881610627565b92915050565b6000602082840312156103f057600080fd5b60006103fe848285016103c9565b91505092915050565b610410816105e6565b82525050565b600061042283856105ca565b935061042f838584610618565b82840190509392505050565b6000610448604a836105d5565b91507f476f7665726e6f72427261766f44656c656761746f723a3a5f736574496d706c60008301527f656d656e746174696f6e3a20696e76616c696420696d706c656d656e7461746960208301527f6f6e2061646472657373000000000000000000000000000000000000000000006040830152606082019050919050565b60006104d46036836105d5565b91507f476f7665726e6f72427261766f44656c656761746f723a3a5f736574496d706c60008301527f656d656e746174696f6e3a2061646d696e206f6e6c79000000000000000000006020830152604082019050919050565b600061053a828486610416565b91508190509392505050565b600060208201905061055b6000830184610407565b92915050565b60006040820190506105766000830185610407565b6105836020830184610407565b9392505050565b600060208201905081810360008301526105a38161043b565b9050919050565b600060208201905081810360008301526105c3816104c7565b9050919050565b600081905092915050565b600082825260208201905092915050565b60006105f1826105f8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b610630816105e6565b811461063b57600080fd5b5056fea365627a7a7231582055f3d0594243e6ee3fe1055f0484efec2dc39c403124914aa4f68f581f72180a6c6578706572696d656e74616cf564736f6c63430005100040";

export class GovernorCTDLMegaDelegator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    timelock_: string,
    sCTDL_: string,
    gCTDL_: string,
    admin_: string,
    implementation_: string,
    votingPeriod_: BigNumberish,
    votingDelay_: BigNumberish,
    proposalThreshold_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovernorCTDLMegaDelegator> {
    return super.deploy(
      timelock_,
      sCTDL_,
      gCTDL_,
      admin_,
      implementation_,
      votingPeriod_,
      votingDelay_,
      proposalThreshold_,
      overrides || {}
    ) as Promise<GovernorCTDLMegaDelegator>;
  }
  getDeployTransaction(
    timelock_: string,
    sCTDL_: string,
    gCTDL_: string,
    admin_: string,
    implementation_: string,
    votingPeriod_: BigNumberish,
    votingDelay_: BigNumberish,
    proposalThreshold_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      timelock_,
      sCTDL_,
      gCTDL_,
      admin_,
      implementation_,
      votingPeriod_,
      votingDelay_,
      proposalThreshold_,
      overrides || {}
    );
  }
  attach(address: string): GovernorCTDLMegaDelegator {
    return super.attach(address) as GovernorCTDLMegaDelegator;
  }
  connect(signer: Signer): GovernorCTDLMegaDelegator__factory {
    return super.connect(signer) as GovernorCTDLMegaDelegator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovernorCTDLMegaDelegatorInterface {
    return new utils.Interface(_abi) as GovernorCTDLMegaDelegatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovernorCTDLMegaDelegator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GovernorCTDLMegaDelegator;
  }
}
